{"version":3,"sources":["Components/Person.js","Components/Notification.js","Services/phonebook.js","App.js","index.js"],"names":["Filter","inputValue","filterFunction","value","onChange","PersonForm","onSubmitFun","nameInput","nameFunc","numberInput","numberFunc","onSubmit","type","Persons","persons","currFilter","deleteEntry","deletePerson","person","window","confirm","name","id","undefined","length","slice","filter","includes","map","key","number","onClick","commonStyle","background","fontSize","borderStyle","borderRadius","padding","marginBottom","SuccessfulNotification","message","successfulStyle","color","style","UnSuccessfulNotifcation","unsuccessfulStyle","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","sendNotificationMessage","Name","action","setTimeout","useEffect","personService","event","target","preventDefault","nameObject","Object","keys","originalEntry","find","alert","updatedPerson","catch","error","concat","newPersons","x","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc9ed727.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter  = ({inputValue,filterFunction}) => {\n  return (\n      <div>\n        filter show for: <input value={inputValue}\n        onChange={filterFunction}/>\n      </div>\n  )\n}\n\nconst PersonForm   = ({onSubmitFun,nameInput,nameFunc,numberInput,numberFunc}) => {\n  return (\n    <form onSubmit={onSubmitFun}>\n    <div>\n      name: <input value={nameInput}\n      onChange={nameFunc}/>\n    </div>\n    <div>\n      number: <input value={numberInput}\n      onChange={numberFunc}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\n\nconst Persons   = ({persons,currFilter,deleteEntry}) => {\n  // console.log(persons)\n  // console.log(persons.find(x => x.id === 2))\n  \n  function deletePerson(person,deleteEntry) {\n    const result = window.confirm(`Do you want to delete '${person.name}'?`);\n    if (result) {\n      // console.log(persons)\n      deleteEntry(person.id)\n    }\n\n}\n  if (persons[persons.length-1] === undefined) {\n    return ((persons.slice(0,persons.length-1).filter(person => (person.name).includes(currFilter))).map(person => \n        <p key={person.id}>{person.name} {person.number} <button value={person.id} onClick={() => deletePerson(person,deleteEntry)}>delete</button></p>))\n  } else {\n    return ((persons.filter(person => (person.name).includes(currFilter))).map(person => \n        <p key={person.id}>{person.name} {person.number} <button value={person.id} onClick={() => deletePerson(person,deleteEntry)}>delete</button></p>)\n    )\n  }\n}\n\nexport { Filter, PersonForm, Persons }","import React from 'react'\n\nconst commonStyle = {\n  background: 'lightgrey',\n  fontSize: 20,\n  borderStyle: 'solid',\n  borderRadius: 5,\n  padding: 10,\n  marginBottom: 10,\n}\n\n\n\nconst SuccessfulNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  const successfulStyle = {...commonStyle,color: 'green'}\n\n\n  return (\n    <div style={successfulStyle}>\n      {message}\n    </div>\n  )\n}\nconst UnSuccessfulNotifcation = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  const unsuccessfulStyle = {...commonStyle,color: 'red'}\n\n  return (\n    <div style={unsuccessfulStyle}>\n      {message}\n    </div>\n  )\n}\n\n\n\n\nexport {SuccessfulNotification, UnSuccessfulNotifcation} ","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteEntry = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteEntry }","import React, { useState,useEffect  } from 'react'\nimport { Filter, PersonForm, Persons } from './Components/Person'\nimport {SuccessfulNotification, UnSuccessfulNotifcation}  from './Components/Notification'\nimport personService from './Services/phonebook'\n\n\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ currFilter, setFilter ] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  useEffect(() => {\n    personService.getAll().then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n  function sendNotificationMessage (Name,action) {\n    setNotificationMessage(`'${Name}' has been ${action}`)\n    setTimeout(() => {\n      setNotificationMessage(null)\n    }, 1500) \n  }\n  \n  const addPerson = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n      id:persons[Object.keys(persons)[Object.keys(persons).length-1]].id+1\n    }\n    let originalEntry = persons.find(person => person.name === newName)\n\n    if (originalEntry) {\n      if (originalEntry.number ===  newNumber) {\n        window.alert(`${newName} is already added to phonebook`)\n      }\n      else{\n        const result = window.confirm(`'${newName}' has already been added to the phone book, do you want to replace the old number with the newly input number?`);\n        if (result) {\n          nameObject.id = originalEntry.id\n          personService\n          .update(originalEntry.id,nameObject).then(updatedPerson => {\n            setPersons(persons.map(person => person.id !== nameObject.id  ? person:nameObject))\n            setNewName('')\n            setNewNumber('')\n            sendNotificationMessage(newName,\"updated\")\n          })\n          .catch(error => {\n            setErrorMessage(`'${newName}' has been already been deleted.`)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 2500) \n            setPersons(persons.filter(person => person.id !== nameObject.id))\n          })\n        }\n      }\n\n    }\n    else {\n      personService.create(nameObject).then(response => {\n        sendNotificationMessage(newName,\"added\")\n        setPersons(persons.concat(response))\n        setNewName('')\n        setNewNumber('')\n      })\n    }\n\n  }  \n\n  \n  const handleEntryDeletion = (id) => {\n    personService.deleteEntry(id)\n    const newPersons = persons.filter(x => x.id !== id)\n    setPersons(newPersons)\n  }\n\n  const handleNameAddition = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberAddition = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setFilter((event.target.value))\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessfulNotification message={notificationMessage} />\n      <UnSuccessfulNotifcation message={errorMessage} />\n      <Filter inputValue={currFilter} filterFunction={handleFilter}/>\n      <h2>Add a new entry</h2>\n      <PersonForm onSubmitFun={addPerson} nameInput={newName} nameFunc={handleNameAddition} numberInput={newNumber} numberFunc={handleNumberAddition} />\n      <h2>Numbers</h2>\n        <Persons persons={persons} currFilter={currFilter} deleteEntry={handleEntryDeletion}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}